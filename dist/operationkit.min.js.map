{"version":3,"sources":["webpack://operationkit/webpack/universalModuleDefinition","webpack://operationkit/webpack/bootstrap","webpack://operationkit/./src/Operation.js","webpack://operationkit/./src/QueuePriority.js","webpack://operationkit/./node_modules/events/events.js","webpack://operationkit/./src/OperationEvent.js","webpack://operationkit/./src/OperationQueue.js","webpack://operationkit/./src/index.js","webpack://operationkit/./node_modules/uuid/v4.js","webpack://operationkit/./node_modules/uuid/lib/rng-browser.js","webpack://operationkit/./node_modules/uuid/lib/bytesToUuid.js","webpack://operationkit/./src/utils.js","webpack://operationkit/./src/CircularOperationValidator.js","webpack://operationkit/./src/QueueEvent.js","webpack://operationkit/./src/BlockOperation.js","webpack://operationkit/./src/GroupOperation.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EventEmitter","uuidv4","OperationEvent","QueuePriority","copyArray","Operation","[object Object]","id","this","ee","_dependencies","completionCallback","map","isExecuting","_done","_isInQueue","_canStart","_cancelled","error","promise","runPromise","_queuePriority","normal","_resolve","_reject","emit","DONE","result","isFinished","Promise","resolve","CANCEL","isCancelled","isInQueue","queuePriority","isValid","dependencies","event","cb","on","off","dependency","push","filter","operation","Error","START","run","then","done","catch","e","ERROR","err","_preProcessStart","READY","main","reject","_createMap","length","forEach","_onDependantOperationDone","start","_tryStart","_isEmpty","obj","veryLow","low","high","veryHigh","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","init","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","type","listener","prepend","events","existing","warning","TypeError","newListener","unshift","warned","w","String","emitter","count","console","warn","_onceWrap","state","fired","wrapFn","wrapped","arguments","removeListener","_listeners","unwrap","evlistener","arr","ret","Array","unwrapListeners","arrayClone","listenerCount","copy","set","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","message","context","handler","len","listeners","addListener","prependListener","once","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","removeAllListeners","keys","rawListeners","eventNames","CircularOperationValidator","QueueEvent","OperationQueue","operations","_processedOperations","maximumConcurentOperations","readyQueueMap","readyQueue","runningQueueMap","runningQueue","queues","addOperations","_preProcessOperations","_begin","_paused","PAUSED","RESUMED","_checkNextOperation","isPaused","op","_bindOperation","_onOperationStart","_onOperationReady","_onOperationCancel","_onOperationDone","_startOperations","_startOperation","_unbindOperation","_hasOperations","_getNextOperation","BlockOperation","GroupOperation","rng","bytesToUuid","options","buf","offset","rnds","random","ii","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","Math","byteToHex","toString","substr","bth","join","array","assign","copyObject","CircularOperationValidatorError","super","_checkCircular","_verifyOpMap","_checkDependencies","mapHash","JSON","parse","stringify","_throwError","values","block","first","second","blocks","promises","all","queue","reduce","accum"],"mappings":"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","file":"operationkit.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"operationkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"operationkit\"] = factory();\n\telse\n\t\troot[\"operationkit\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","const EventEmitter = require('events')\nconst uuidv4 = require('uuid/v4');\n\nconst { OperationEvent } = require('./OperationEvent');\nconst { QueuePriority } = require('./QueuePriority');\nconst { copyArray } = require('./utils');\n\nclass Operation {\n\n    constructor(id) {\n        if (!id) {\n            id = uuidv4()\n        }\n\n        this.id = id;\n        this.ee = new EventEmitter();\n        this._dependencies = [];\n        this.completionCallback = null;\n        this.map = {};\n        this.isExecuting = false;\n        this._done = false;\n        this._isInQueue = false;\n        this._canStart = false;\n        this._cancelled = false;\n        this.error = true;\n        this.name = null;\n        this.promise = null;\n        this.runPromise = null;\n        this._queuePriority = QueuePriority.normal;\n\n        this._resolve = null;\n        this._reject = null;\n    }\n\n    done() {\n        this._done = true;\n        this.completionCallback && this.completionCallback(this);\n        this.ee.emit(OperationEvent.DONE, this);\n        this._resolve && this._resolve(this.result);\n    }\n\n    isDone() {\n        return this._done;\n    }\n\n    get isFinished() {\n        return this._done;\n    }\n    \n    cancel() {\n        this._cancelled = true;\n        Promise.resolve(this.promise);\n        this.ee.emit(OperationEvent.CANCEL, this);\n        this._resolve && this._resolve();\n    }\n\n    get isCancelled() {\n        return this._cancelled;\n    }\n\n    set isInQueue(value) {\n        this._isInQueue = value;\n    }\n\n    get isInQueue() {\n        return this._isInQueue;\n    }\n\n    set queuePriority(value) {\n        if (this.isExecuting || this.isCancelled || this.isFinished) {\n            return;\n        }\n\n        if (QueuePriority.isValid(value)) {\n            this._queuePriority = value;\n        }\n    }\n\n    get queuePriority() {\n        return this._queuePriority;\n    }\n\n    set dependencies(value) {\n        if (this.isExecuting || this.isCancelled || this.isFinished) {\n            return;\n        }\n\n        this._dependencies = value;\n    }\n\n    get dependencies() {\n        if (this.isExecuting || this.isCancelled || this.isFinished) {\n            return copyArray(this._dependencies);\n        }\n        return this._dependencies;\n    }\n\n    on(event, cb) {\n        this.ee.on(event, cb);\n    }\n\n    off(event, cb) {\n        this.ee.off(event, cb);\n    }\n\n    addDependency(dependency) {\n        this._dependencies.push(dependency);\n    }\n\n    removeDependency(dependency) {\n        this._dependencies = this._dependencies.filter(operation => operation.id !== dependency.id)\n    }\n\n    /**\n     * @abstract\n     * Needs to be implemented by sub-class\n     * Task to be executed\n     */\n    async run() {\n        throw new Error('run function must be implemented');\n    }\n\n    main() {\n        this.isExecuting = true;\n        this.ee.emit(OperationEvent.START, this);\n        this.runPromise = this.run()\n            .then(result => {\n                this.result = result;\n                this.done();\n            })\n            .catch(e => {\n                this.isExecuting = false;\n                this.error = true;\n                this.ee.emit(OperationEvent.ERROR, {err: e, operation: this});\n                this.ee.emit(OperationEvent.DONE, this);\n                this._reject && this._reject();\n            });\n    }\n\n    start() {\n        if (this.isExecuting || this.isCancelled || this.isFinished) {\n            return this.promise;\n        } else if (this.promise && !this._canStart) {\n            this._preProcessStart();\n        } else if (this.promise && this._canStart) {\n            if (this._isInQueue) {\n                this.ee.emit(OperationEvent.READY, this);\n            } else {\n                this.main();\n            }\n        } else {\n            this.promise = new Promise((resolve, reject) => {\n                this._resolve = resolve;\n                this._reject = reject;\n                this._preProcessStart();\n            });\n        }\n        return this.promise;\n    }\n\n    _preProcessStart() {\n        this._createMap();\n\n        if (this._canStart) {\n            if (this._isInQueue) {\n                this.ee.emit(OperationEvent.READY, this);\n            } else {\n                this.main();\n            }\n        }\n    }\n\n    _createMap() {\n        if (!this._dependencies.length) {\n            this._canStart = true;\n            return;\n        }\n\n        this._dependencies.forEach(operation => {\n            this.map[operation.id] = true;\n            operation.on(OperationEvent.DONE, this._onDependantOperationDone.bind(this));\n            operation.start();\n        });\n\n    }\n\n    _onDependantOperationDone(operation) {\n        delete this.map[operation.id];\n        this._tryStart();\n    }\n\n    _tryStart() {\n        if (this.isExecuting || this.isCancelled || this.isFinished) {\n            return;\n        }\n        if (this._isEmpty(this.map)) {\n            // should emit event to let operation queue that this operation can start\n            // then it could check if maximum concurrent is not passed\n            this._canStart = true;\n            if (this.isInQueue) {\n                this.ee.emit(OperationEvent.READY, this);\n            } else {\n                this.start();\n            }\n        }\n    }\n\n    _isEmpty(obj) {\n        for(var key in obj) {\n            if(obj.hasOwnProperty(key))\n                return false;\n        }\n        return true;\n    }\n}\n\nmodule.exports = {\n    Operation\n}","const QueuePriority = {\n    veryLow: 0,\n    low: 1,\n    normal: 2,\n    high: 3,\n    veryHigh: 4,\n    isValid(value) {\n        return value >= QueuePriority.veryLow && value <= QueuePriority.veryHigh;\n    }\n}\n\nmodule.exports = {\n    QueuePriority\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","\nconst OperationEvent = {\n    START: 'start',\n    READY: 'ready',\n    DONE: 'done',\n    CANCEL: 'cancel',\n    ERROR: 'e'\n}\n\nmodule.exports = {\n    OperationEvent\n}","const EventEmitter = require('events')\nconst { CircularOperationValidator } = require('./CircularOperationValidator');\nconst { QueuePriority } = require('./QueuePriority');\nconst { QueueEvent } = require('./QueueEvent');\n\nclass OperationQueue {\n\n    constructor() {\n        this.ee = new EventEmitter();\n        this.map = {};\n        this.operations = [];\n        this._processedOperations = [];\n        this.resolve = null;\n        this.completionCallback = null;\n        this.maximumConcurentOperations = 10;\n\n        this.readyQueueMap = {};\n        this.readyQueue = [];\n\n        this.runningQueueMap = {};\n        this.runningQueue = [];\n\n        this.queues = {\n            [QueuePriority.veryHigh]: [],\n            [QueuePriority.high]: [],\n            [QueuePriority.normal]: [],\n            [QueuePriority.low]: [],\n            [QueuePriority.veryLow]: []\n        }\n    }\n    \n    on(event, cb) {\n        this.ee.on(event, cb);\n    }\n\n    off(event, cb) {\n        this.ee.off(event, cb);\n    }\n\n    get isExecuting() {\n        return !this._isEmpty(this.map);\n    }\n\n    done() {\n        this.completionCallback && this.completionCallback();\n        this.resolve();\n    }\n\n    /**\n     * \n     * @param {Operation} operation \n     */\n    addOperation(operation) {\n        this.addOperations([operation]);\n    }\n\n    /**\n     * \n     * @param {Array.<Operation>} operations\n     */\n    addOperations(operations) {\n        this.operations = this.operations.concat(operations);\n        this._preProcessOperations(operations);\n        this._processedOperations = this._processedOperations.concat(this.operations);\n        this._begin();\n    }\n\n    pause() {\n        if (!this._paused) {\n            this._paused = true;\n            this.ee.emit(QueueEvent.PAUSED, this);\n        }\n    }\n\n    resume() {\n        if (this._paused) {\n            this._paused = false;\n            this.ee.emit(QueueEvent.RESUMED, this);\n            this._checkNextOperation();\n        }\n    }\n\n    get isPaused() {\n        return this._paused;\n    }\n\n    _preProcessOperations(operations) {\n        try {\n            new CircularOperationValidator(operations);\n        } catch (e) {\n            throw e;\n        }\n\n        operations.forEach(op => {\n            if (!this.map[op.id]) {\n                this.map[op.id] = true;\n                op.isInQueue = true;\n                this._bindOperation(op);\n            };\n            this._preProcessOperations(op.dependencies);\n        });\n    }\n\n    _bindOperation(operation) {\n        operation.on('start', this._onOperationStart.bind(this));\n        operation.on('ready', this._onOperationReady.bind(this));\n        operation.on('cancel', this._onOperationCancel.bind(this));\n        operation.on('done', this._onOperationDone.bind(this));\n    }\n\n    _unbindOperation(operation) {\n        operation.off('start', this._onOperationStart.bind(this));\n        operation.off('ready', this._onOperationReady.bind(this));\n        operation.off('cancel', this._onOperationCancel.bind(this));\n        operation.off('done', this._onOperationDone.bind(this));\n    }\n\n    _begin() {\n        if (this.promise) {\n            this._startOperations();\n        } else {\n            this.promise = new Promise((resolve, reject) => {\n            \n                this.resolve = resolve;\n                \n                this._startOperations();\n            });\n        }\n    }\n\n    _startOperations() {\n        this._processedOperations.forEach(operation => {\n            this._startOperation(operation);\n        });\n    }\n\n    _startOperation(operation) {\n        operation.start();\n    }\n\n    _onOperationStart(operation) {\n        //\n    }\n\n    _onOperationReady(operation) {\n        if (this.readyQueueMap[operation.id]) {\n            return;\n        }\n        this.readyQueueMap[operation.id] = true;\n        this.queues[operation.queuePriority].push(operation);\n\n        this._checkNextOperation() \n    }\n\n    _onOperationDone(operation) {\n        this._unbindOperation(operation);\n\n        this.runningQueue = this.runningQueue.filter(op => op.id !== operation.id);\n        \n        delete this.map[operation.id];\n        delete this.runningQueueMap[operation.id];\n\n        if (this._isEmpty(this.map)) {\n            this.ee.emit(QueueEvent.DONE, this);\n            this.done();\n        } else {\n            this._checkNextOperation();\n        }\n    }\n\n    _checkNextOperation() {\n        if (this._paused) {\n            return;\n        }\n\n        if (this.runningQueue.length < this.maximumConcurentOperations && this._hasOperations()) {\n            const operation = this._getNextOperation();\n            if (!operation.isExecuting || !operation.isCancelled || !this.runningQueueMap[operation.id]) {\n                this.runningQueueMap[operation.id] = true;\n                this.runningQueue.push(operation);\n                operation.main();\n                this._checkNextOperation()\n            }\n        }\n    }\n\n    _hasOperations() {\n        return !!(this.queues[QueuePriority.veryHigh].length\n        + this.queues[QueuePriority.high].length\n        + this.queues[QueuePriority.normal].length\n        + this.queues[QueuePriority.low].length\n        + this.queues[QueuePriority.veryLow].length);\n    }\n\n    _getNextOperation() {\n        if (this.queues[QueuePriority.veryHigh].length) {\n            return this.queues[QueuePriority.veryHigh].pop();\n        } else if (this.queues[QueuePriority.high].length) {\n            return this.queues[QueuePriority.high].pop();\n        } else if (this.queues[QueuePriority.normal].length) {\n            return this.queues[QueuePriority.normal].pop();\n        } else if (this.queues[QueuePriority.low].length) {\n            return this.queues[QueuePriority.low].pop();\n        } else if (this.queues[QueuePriority.veryLow].length) {\n            return this.queues[QueuePriority.veryLow].pop();\n        }\n    }\n\n\n    _onOperationCancel(operation) {\n        delete this.map[operation.id];\n        this.operations = this.operations.filter(op => op.id !== operation.id);\n        if (this._isEmpty(this.map)) {\n            this.ee.emit(QueueEvent.DONE, this);\n            this.done();\n        }\n    }\n\n    _isEmpty(obj) {\n        for(var key in obj) {\n            if(obj.hasOwnProperty(key))\n                return false;\n        }\n        return true;\n    }\n}\n\nmodule.exports = {\n    OperationQueue\n}","\nconst { Operation } = require('./Operation');\nconst { OperationQueue } = require('./OperationQueue');\nconst { BlockOperation } = require('./BlockOperation');\nconst { GroupOperation } = require('./GroupOperation');\nconst { OperationEvent } = require('./OperationEvent');\nconst { QueuePriority } = require('./QueuePriority');\n\nmodule.exports = {\n    Operation,\n    OperationQueue,\n    BlockOperation,\n    GroupOperation,\n    OperationEvent,\n    QueuePriority\n};","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","const copyArray = array => {\n    return array.map(object => Object.assign(Object.create(object), object))\n}\n\nconst copyObject = object => {\n    return Object.assign(Object.create(object), object);\n}\n\nmodule.exports = {\n    copyArray,\n    copyObject\n}","\nclass CircularOperationValidatorError extends Error {\n    constructor(message) {\n        super()\n        this.message = message;\n    }\n}\n\nclass CircularOperationValidator {\n\n    constructor(operations) {\n        this.operations = operations\n        this._checkCircular();\n    }\n\n    _checkCircular() {\n        this.operations.forEach(operation => {\n            operation.dependencies.forEach(op => {\n                let map = {};\n                map[operation.id] = Object.keys(map).length;\n                this._verifyOpMap(op, map);                \n                this._checkDependencies(op, map)\n            });\n        });\n    }\n\n    _checkDependencies(operation, mapHash) {\n        operation.dependencies.forEach(op => {\n            let map = JSON.parse(JSON.stringify(mapHash));\n            this._verifyOpMap(op, map);\n            this._checkDependencies(op, map)\n        })\n    }\n\n    _verifyOpMap(op, map) {\n        if (map[op.id] !== undefined) {\n            this._throwError(op, map)\n        }\n\n        map[op.id] = Object.keys(map).length;\n    }\n\n    _throwError(op, map) {\n        let keys = Object.keys(map);\n\n            let values = {};\n            for (let key in map) {\n                const value = map[key];\n                values[value] = key;\n            }\n\n            values = Object.values(values);\n            values.push(op.id);\n            throw new CircularOperationValidatorError(`Circular: ${values}`);\n    }\n\n}\n\nmodule.exports = {\n    CircularOperationValidator\n}","const QueueEvent = {\n    DONE: 'done',\n    PAUSED: 'paused',\n    RESUMED: 'resumed'\n}\n\nmodule.exports = {\n    QueueEvent\n}","const { Operation } = require('./Operation');\n\nclass BlockOperation extends Operation {\n\n    constructor() {\n        let id;\n        let block;\n\n        const first = arguments[0];\n        if (typeof first === 'number') {\n            id = first;\n            const second = arguments[1];\n            if (typeof second === 'function') {\n                block = second;\n            }\n        } else if (typeof first === 'function') {\n            block = first;\n        } else {\n            throw new Error('Wrong arguments passed: missing ID and/or function');\n        }\n        \n        super(id);\n        this.blocks = [block];\n    }\n\n    run() {\n        const promises = [];\n        this.blocks.forEach(block => {\n            promises.push(block());\n        });\n        return Promise.all(promises);\n    }\n\n    addBlock(block) {\n        if (typeof block === 'function') {\n            this.blocks.push(block);\n        }\n    }\n}\n\nmodule.exports = {\n    BlockOperation\n}","const { Operation } = require('./Operation');\nconst { OperationQueue } = require('./OperationQueue');\n\nclass GroupOperation extends Operation {\n\n    constructor() {\n        super();\n        this.queue = new OperationQueue();    \n        this.operations = [];\n    }\n\n    /**\n     * @override\n     * \n     * @returns {Promise}\n     */\n    async run() {\n        await this.queue.addOperations(this.operations)\n\n        return this.operations.reduce((accum, operation) => {\n            accum.push(operation.result);\n            return accum;\n        }, []);           \n    }\n\n    /**\n     * @override\n     */\n    async start() {\n        this.dependencies = [];\n        return super.start();\n    }\n\n    /**\n     * @param {Operation} operation \n     */\n    addOperation(operation) {\n        this.operations.push(operation);\n        this.dependencies = [];\n    }\n\n    /**\n     * @param {Array.<Operation>} operation \n     */\n    addOperations(operations) {\n        this.operations = this.operations.concat(operations);\n        this.dependencies = [];\n    }\n}\n\nmodule.exports = {\n    GroupOperation\n}"],"sourceRoot":""}