{"version":3,"sources":["webpack://operationkit/webpack/universalModuleDefinition","webpack://operationkit/webpack/bootstrap","webpack://operationkit/./src/Operation.js","webpack://operationkit/./src/QueuePriority.js","webpack://operationkit/./node_modules/events/events.js","webpack://operationkit/./src/OperationEvent.js","webpack://operationkit/./src/utils.js","webpack://operationkit/./src/OperationQueue.js","webpack://operationkit/./src/index.js","webpack://operationkit/./node_modules/uuid/v4.js","webpack://operationkit/./node_modules/uuid/lib/rng-browser.js","webpack://operationkit/./node_modules/uuid/lib/bytesToUuid.js","webpack://operationkit/./src/CircularOperationValidator.js","webpack://operationkit/./src/QueueEvent.js","webpack://operationkit/./src/BlockOperation.js","webpack://operationkit/./src/GroupOperation.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EventEmitter","uuidv4","OperationEvent","QueuePriority","copyArray","isObjectEmpty","Operation","[object Object]","id","super","this","completionCallback","map","isExecuting","error","promise","runPromise","_dependencies","_done","_isInQueue","_canStart","_cancelled","_queuePriority","normal","_resolve","_reject","isFinished","isCancelled","isInQueue","queuePriority","isValid","dependencies","operations","Promise","resolve","emit","CANCEL","DONE","result","dependency","push","filter","operation","Error","_preProcessStart","READY","main","reject","START","run","then","done","catch","e","ERROR","err","_createMap","length","forEach","on","_onDependantOperationDone","start","_tryStart","veryLow","low","high","veryHigh","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","init","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","type","listener","prepend","events","existing","warning","TypeError","newListener","unshift","warned","w","String","emitter","count","console","warn","_onceWrap","state","fired","wrapFn","wrapped","arguments","removeListener","_listeners","unwrap","evlistener","arr","ret","Array","unwrapListeners","arrayClone","listenerCount","copy","set","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","message","context","handler","len","listeners","addListener","prependListener","once","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","keys","rawListeners","eventNames","array","assign","copyObject","CircularOperationValidator","QueueEvent","OperationQueue","_processedOperations","maximumConcurentOperations","readyQueueMap","readyQueue","runningQueueMap","runningQueue","queues","addOperations","_preProcessOperations","_begin","_paused","PAUSED","RESUMED","_checkNextOperation","isPaused","op","_bindOperation","_onOperationStart","_onOperationReady","_onOperationCancel","_onOperationDone","_startOperations","_startOperation","_unbindOperation","hasOperations","getNextOperation","BlockOperation","GroupOperation","rng","bytesToUuid","options","buf","offset","rnds","random","ii","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","Math","byteToHex","toString","substr","bth","join","CircularOperationValidatorError","_checkCircular","_verifyOpMap","_checkDependencies","mapHash","JSON","parse","stringify","_throwError","values","block","first","second","blocks","promises","all","queue","reduce","accum"],"mappings":"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","file":"operationkit.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"operationkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"operationkit\"] = factory();\n\telse\n\t\troot[\"operationkit\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","const EventEmitter = require('events')\nconst uuidv4 = require('uuid/v4');\n\nconst { OperationEvent } = require('./OperationEvent');\nconst { QueuePriority } = require('./QueuePriority');\nconst { copyArray, isObjectEmpty } = require('./utils');\n\n/**\n * @class Operation\n * @constructor Operation\n * @description Abstract class which runs a single task\n */\nclass Operation extends EventEmitter {\n\n    /**\n     * @param {number} [id]\n     */\n    constructor(id) {\n        super();\n        \n        if (!id) {\n            id = uuidv4()\n        }\n\n        this.id = id;\n        this.name = null;\n        this.completionCallback = null;\n        this.map = {};\n        this.isExecuting = false;\n        this.error = true;\n        this.promise = null;\n        this.runPromise = null;\n\n        this._dependencies = [];\n        this._done = false;\n        this._isInQueue = false;\n        this._canStart = false;\n        this._cancelled = false;\n        this._queuePriority = QueuePriority.normal;\n\n        this._resolve = null;\n        this._reject = null;\n    }\n\n    /**\n     * @description Getter returning if Operation finished its task\n     * @returns {boolean}\n     */\n    get isFinished() {\n        return this._done;\n    }\n\n    /**\n     * @description Knowing if operation was cancelled\n     * @returns {boolean}\n     */\n    get isCancelled() {\n        return this._cancelled;\n    }\n\n    /**\n     * Setter for isInQueue value\n     * @param {boolean} value\n     */\n    set isInQueue(value) {\n        this._isInQueue = value;\n    }\n\n    /**\n     * Getter for isInQueue value\n     */\n    get isInQueue() {\n        return this._isInQueue;\n    }\n\n    /**\n     * Setter for queuePriority value.\n     * It is only settable when operation has not yet executed, cancelled or finished\n     * @param {QueuePriority|number} value\n     */\n    set queuePriority(value) {\n        if (this.isExecuting || this.isCancelled || this.isFinished) {\n            return;\n        }\n\n        if (QueuePriority.isValid(value)) {\n            this._queuePriority = value;\n        }\n    }\n\n    /**\n     * Getter for queuePriority value\n     * @returns {QueuePriority|number}\n     */\n    get queuePriority() {\n        return this._queuePriority;\n    }\n\n    /**\n     * Setter for dependencies value.\n     * It is only settable when operation has not yet executed, cancelled or finished\n     * @param {Array.<Operation>} operations\n     */\n    set dependencies(operations) {\n        if (this.isExecuting || this.isCancelled || this.isFinished) {\n            return;\n        }\n\n        this._dependencies = operations;\n    }\n\n    /**\n     * Getter for dependencies value.\n     * When operation is executing, cancelled, or finished, this returns a copy\n     * @returns {Array.<Operation>}\n     */\n    get dependencies() {\n        if (this.isExecuting || this.isCancelled || this.isFinished) {\n            return copyArray(this._dependencies);\n        }\n        return this._dependencies;\n    }\n\n    /**\n     * @description Cancels the operation if the operation has not started.\n     * @returns {undefined}\n     */\n    cancel() {\n        this._cancelled = true;\n        Promise.resolve(this.promise);\n        this.emit(OperationEvent.CANCEL, this);\n        this._resolve && this._resolve();\n    }\n\n    /**\n     * @description Sets the operation as done. This is usually called internally or by the operationQueue\n     * @returns {undefined}\n     */\n    done() {\n        this._done = true;\n        this.completionCallback && this.completionCallback(this);\n        this.emit(OperationEvent.DONE, this);\n        this._resolve && this._resolve(this.result);\n    }\n\n    /**\n     * @description Knowing if operation finished its task\n     * @returns {boolean} \n     */\n    isDone() {\n        return this._done;\n    }\n\n    /**\n     * Adds an operation as a dependency\n     * @param {Operation} dependency \n     */\n    addDependency(dependency) {\n        this._dependencies.push(dependency);\n    }\n\n    /**\n     * Removes an operation as a dependency\n     * @param {Operation} dependency \n     */\n    removeDependency(dependency) {\n        this._dependencies = this._dependencies.filter(operation => operation.id !== dependency.id)\n    }\n\n    /**\n     * @abstract\n     * @description Needs to be implemented by sub-class\n     *  This is the task to be executed\n     */\n    async run() {\n        throw new Error('run function must be implemented');\n    }\n\n    /**\n     * Method to call to execute the operation's task.\n     * The operation will not run immediatly. It is evaluated at the next tick and evaluates it's depedencies\n     * in order to run. Calling this method multiples times will simply re-evaluate it's readiness\n     * @returns {Promise} \n     */\n    start() {\n        if (this.isExecuting || this.isCancelled || this.isFinished) {\n            return this.promise;\n        } else if (this.promise && !this._canStart) {\n            this._preProcessStart();\n        } else if (this.promise && this._canStart) {\n            if (this._isInQueue) {\n                this.emit(OperationEvent.READY, this);\n            } else {\n                this.main();\n            }\n        } else {\n            this.promise = new Promise((resolve, reject) => {\n                this._resolve = resolve;\n                this._reject = reject;\n                this._preProcessStart();\n            });\n        }\n        return this.promise;\n    }\n\n    /**\n     * @protected\n     */\n    main() {\n        this.isExecuting = true;\n        this.emit(OperationEvent.START, this);\n        this.runPromise = this.run()\n            .then(result => {\n                this.result = result;\n                this.done();\n            })\n            .catch(e => {\n                this.isExecuting = false;\n                this.error = true;\n                this.emit(OperationEvent.ERROR, {err: e, operation: this});\n                this.emit(OperationEvent.DONE, this);\n                this._reject && this._reject();\n            });\n    }\n\n    _preProcessStart() {\n        this._createMap();\n\n        if (this._canStart) {\n            if (this._isInQueue) {\n                this.emit(OperationEvent.READY, this);\n            } else {\n                this.main();\n            }\n        }\n    }\n\n    _createMap() {\n        if (!this._dependencies.length) {\n            this._canStart = true;\n            return;\n        }\n\n        this._dependencies.forEach(operation => {\n            this.map[operation.id] = true;\n            operation.on(OperationEvent.DONE, this._onDependantOperationDone.bind(this));\n            operation.start();\n        });\n\n    }\n\n    _onDependantOperationDone(operation) {\n        delete this.map[operation.id];\n        this._tryStart();\n    }\n\n    _tryStart() {\n        if (this.isExecuting || this.isCancelled || this.isFinished) {\n            return;\n        }\n        if (isObjectEmpty(this.map)) {\n            // should emit event to let operation queue that this operation can start\n            // then it could check if maximum concurrent is not passed\n            this._canStart = true;\n            if (this.isInQueue) {\n                this.emit(OperationEvent.READY, this);\n            } else {\n                this.start();\n            }\n        }\n    }\n}\n\nmodule.exports = {\n    Operation\n};","\n/**\n * Priority given to an operation when it is executed inside an OperationQueue.\n */\nclass QueuePriority {\n\n    /**\n     * Lowest priority\n     * @type {number}\n     */\n    get veryLow() {\n        return 0;\n    }\n\n    /**\n     * Low priority\n     * @type {number}\n     */\n    get low() {\n        return 1;\n    }\n\n    /**\n     * Normal priority\n     * @type {number}\n     */\n    get normal() {\n        return 2;\n    }\n\n    /**\n     * High priority\n     * @type {number}\n     */\n    get high() {\n        return 3;\n    }\n\n    /**\n     * Highest priority\n     * @type {number}\n     */\n    get veryHigh() {\n        return 4;\n    }\n\n    /**\n     * Validates QueuePriority assignment value\n     * @param {QueuePriority|number} value\n     */\n    isValid(value) {\n        return value >= this.veryLow && value <= this.veryHigh;\n    }\n}\n\nmodule.exports = {\n    QueuePriority: new QueuePriority()\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","\n/**\n * Events fired from Operation\n */\nclass OperationEvent {\n\n    /**\n     * Event when operation starts\n     * @returns {string}\n     */\n    get START() {\n        return 'start';\n    }\n\n    /**\n     * Event when operation is ready to be executed\n     * @returns {string}\n     */\n    get READY() {\n        return 'ready';\n    }\n\n    /**\n     * Event when operation is done\n     * @returns {string}\n     */\n    get DONE() {\n        return 'done';\n    }\n\n    /**\n     * Event when operation is cancelled\n     * @returns {string}\n     */\n    get CANCEL() {\n        return 'cancel';\n    }\n\n    /**\n     * Event when something went wrong\n     * @returns {string}\n     */\n    get ERROR() {\n        return 'e';\n    }\n}\n\nmodule.exports = {\n    OperationEvent: new OperationEvent()\n};","\nconst copyArray = array => {\n    return array.map(object => Object.assign(Object.create(object), object))\n};\n\nconst copyObject = object => {\n    return Object.assign(Object.create(object), object);\n};\n\nconst isObjectEmpty = object => {\n    for (const key in object) {\n        return false;\n    }\n    return true;\n};\n\nmodule.exports = {\n    copyArray,\n    copyObject,\n    isObjectEmpty\n};","const EventEmitter = require('events')\nconst { CircularOperationValidator } = require('./CircularOperationValidator');\nconst { QueuePriority } = require('./QueuePriority');\nconst { QueueEvent } = require('./QueueEvent');\nconst { isObjectEmpty } = require('./utils');\n\n/**\n * @class OperationQueue\n */\nclass OperationQueue extends EventEmitter {\n\n    constructor() {\n        super();\n        this.map = {};\n        this.operations = [];\n        this._processedOperations = [];\n        this.resolve = null;\n        this.completionCallback = null;\n        this.maximumConcurentOperations = 10;\n\n        this.readyQueueMap = {};\n        this.readyQueue = [];\n\n        this.runningQueueMap = {};\n        this.runningQueue = [];\n\n        this.queues = {\n            [QueuePriority.veryHigh]: [],\n            [QueuePriority.high]: [],\n            [QueuePriority.normal]: [],\n            [QueuePriority.low]: [],\n            [QueuePriority.veryLow]: []\n        }\n    }\n\n    /**\n     * Getter\n     * @returns {boolean}\n     */\n    get isExecuting() {\n        return !isObjectEmpty(this.map);\n    }\n\n    /**\n     * Complete the queue, this will resolve and notify its callback\n     */\n    done() {\n        this.completionCallback && this.completionCallback();\n        this.resolve();\n    }\n\n    /**\n     * @param {Operation} operation\n     */\n    addOperation(operation) {\n        this.addOperations([operation]);\n    }\n\n    /**\n     * @param {Array.<Operation>} operations\n     */\n    addOperations(operations) {\n        this.operations = this.operations.concat(operations);\n        this._preProcessOperations(operations);\n        this._processedOperations = this._processedOperations.concat(this.operations);\n        this._begin();\n\n        return this.promise;\n    }\n\n    /**\n     * Pauses the queue, no new operations will be added to the queue\n     */\n    pause() {\n        if (!this._paused) {\n            this._paused = true;\n            this.emit(QueueEvent.PAUSED, this);\n        }\n    }\n\n    /**\n     * Resumes the queue from an paused state\n     */\n    resume() {\n        if (this._paused) {\n            this._paused = false;\n            this.emit(QueueEvent.RESUMED, this);\n            this._checkNextOperation();\n        }\n    }\n\n    /**\n     * Getter\n     * @returns {boolean}\n     */\n    get isPaused() {\n        return this._paused;\n    }\n\n    _preProcessOperations(operations) {\n        try {\n            new CircularOperationValidator(operations);\n        } catch (e) {\n            throw e;\n        }\n\n        operations.forEach(op => {\n            if (!this.map[op.id]) {\n                this.map[op.id] = true;\n                op.isInQueue = true;\n                this._bindOperation(op);\n            };\n            this._preProcessOperations(op.dependencies);\n        });\n    }\n\n    _bindOperation(operation) {\n        operation.on('start', this._onOperationStart.bind(this));\n        operation.on('ready', this._onOperationReady.bind(this));\n        operation.on('cancel', this._onOperationCancel.bind(this));\n        operation.on('done', this._onOperationDone.bind(this));\n    }\n\n    _unbindOperation(operation) {\n        operation.off('start', this._onOperationStart.bind(this));\n        operation.off('ready', this._onOperationReady.bind(this));\n        operation.off('cancel', this._onOperationCancel.bind(this));\n        operation.off('done', this._onOperationDone.bind(this));\n    }\n\n    _begin() {\n        if (this.promise) {\n            this._startOperations();\n        } else {\n            this.promise = new Promise((resolve, reject) => {\n            \n                this.resolve = resolve;\n\n                this._startOperations();\n            });\n        }\n    }\n\n    _startOperations() {\n        this._processedOperations.forEach(operation => {\n            this._startOperation(operation);\n        });\n    }\n\n    _startOperation(operation) {\n        operation.start();\n    }\n\n    _onOperationStart(operation) {\n        //\n    }\n\n    _onOperationReady(operation) {\n        this.readyQueueMap[operation.id] = true;\n        this.queues[operation.queuePriority].push(operation);\n        this._checkNextOperation() \n    }\n\n    _onOperationDone(operation) {\n        this._unbindOperation(operation);\n\n        this.runningQueue = this.runningQueue.filter(op => op.id !== operation.id);\n        \n        delete this.map[operation.id];\n        delete this.runningQueueMap[operation.id];\n\n        if (isObjectEmpty(this.map)) {\n            this.emit(QueueEvent.DONE, this);\n            this.done();\n        } else {\n            this._checkNextOperation();\n        }\n    }\n\n    _checkNextOperation() {\n        if (this._paused) {\n            return;\n        }\n\n        if (this.runningQueue.length < this.maximumConcurentOperations && this.hasOperations()) {\n            const operation = this.getNextOperation();\n            if (operation\n                 && !operation.isExecuting\n                 || !operation.isCancelled\n                 || !this.runningQueueMap[operation.id]) {\n                this.runningQueueMap[operation.id] = true;\n                this.runningQueue.push(operation);\n                operation.main();\n                this._checkNextOperation()\n            }\n        }\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    hasOperations() {\n        return !!(this.queues[QueuePriority.veryHigh].length\n        + this.queues[QueuePriority.high].length\n        + this.queues[QueuePriority.normal].length\n        + this.queues[QueuePriority.low].length\n        + this.queues[QueuePriority.veryLow].length);\n    }\n\n    /**\n     * Returns the next operation to be executed\n     *\n     * @returns {?Operation}\n     */\n    getNextOperation() {\n        let operation = null;\n        if (this.queues[QueuePriority.veryHigh].length) {\n            operation = this.queues[QueuePriority.veryHigh].pop();\n            return operation;\n        }\n        if (this.queues[QueuePriority.high].length) {\n            operation = this.queues[QueuePriority.high].pop();\n            return operation;\n        } \n        if (this.queues[QueuePriority.normal].length) {\n            operation = this.queues[QueuePriority.normal].pop();\n            return operation;\n        } \n        if (this.queues[QueuePriority.low].length) {\n            operation = this.queues[QueuePriority.low].pop();\n            return operation;\n        }\n        if (this.queues[QueuePriority.veryLow].length) {\n            operation = this.queues[QueuePriority.veryLow].pop();\n            return operation;\n        }\n        return operation;\n    }\n\n    _onOperationCancel(operation) {\n        delete this.map[operation.id];\n        delete this.queues[operation.queuePriority];\n        this.operations = this.operations.filter(op => op.id !== operation.id);\n        if (isObjectEmpty(this.map)) {\n            this.emit(QueueEvent.DONE, this);\n            this.done();\n        }\n    }\n\n}\n\nmodule.exports = {\n    OperationQueue\n};","\nconst { Operation } = require('./Operation');\nconst { OperationQueue } = require('./OperationQueue');\nconst { BlockOperation } = require('./BlockOperation');\nconst { GroupOperation } = require('./GroupOperation');\nconst { OperationEvent } = require('./OperationEvent');\nconst { QueuePriority } = require('./QueuePriority');\n\nmodule.exports = {\n    Operation,\n    OperationQueue,\n    BlockOperation,\n    GroupOperation,\n    OperationEvent,\n    QueuePriority\n};","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","\nclass CircularOperationValidatorError extends Error {\n    constructor(message) {\n        super();\n        this.message = message;\n    }\n}\n\nclass CircularOperationValidator {\n\n    /**\n     * @param {Array.<Operation>} operations\n     */\n    constructor(operations) {\n        this.operations = operations;\n        this._checkCircular();\n    }\n\n    _checkCircular() {\n        this.operations.forEach(operation => {\n            operation.dependencies.forEach(op => {\n                let map = {};\n                map[operation.id] = Object.keys(map).length;\n                this._verifyOpMap(op, map);                \n                this._checkDependencies(op, map)\n            });\n        });\n    }\n\n    _checkDependencies(operation, mapHash) {\n        operation.dependencies.forEach(op => {\n            let map = JSON.parse(JSON.stringify(mapHash));\n            this._verifyOpMap(op, map);\n            this._checkDependencies(op, map)\n        })\n    }\n\n    /**\n     * @param {Operation} op\n     * @param map\n     * @private\n     */\n    _verifyOpMap(op, map) {\n        if (map[op.id] !== undefined) {\n            this._throwError(op, map)\n        }\n\n        map[op.id] = Object.keys(map).length;\n    }\n\n    _throwError(op, map) {\n        let keys = Object.keys(map);\n\n            let values = {};\n            for (let key in map) {\n                const value = map[key];\n                values[value] = key;\n            }\n\n            values = Object.values(values);\n            values.push(op.id);\n            throw new CircularOperationValidatorError(`Circular: ${values}`);\n    }\n\n}\n\nmodule.exports = {\n    CircularOperationValidator\n};","\n/**\n * Events fired from OperationQueue\n */\nclass QueueEvent {\n\n    /**\n     * DONE Event\n     * @returns {string}\n     */\n    get DONE() {\n        return 'done';\n    }\n\n    /**\n     * PAUSED Event\n     * @returns {string}\n     */\n    get PAUSED() {\n        return 'paused';\n    }\n\n    /**\n     * RESUMED Event\n     * @returns {string}\n     */\n    get RESUMED() {\n        return 'resumed';\n    }\n}\n\nmodule.exports = {\n    QueueEvent: new QueueEvent()\n};","const { Operation } = require('./Operation');\n\n/**\n * Operation Subclass that accepts a function as an argument which will be the task to run.\n * Additionally, multiple functions can be appended to run simultaneously as the same task.\n */\nclass BlockOperation extends Operation {\n\n    constructor() {\n        let id;\n        let block;\n\n        const first = arguments[0];\n        if (typeof first === 'number') {\n            id = first;\n            const second = arguments[1];\n            if (typeof second === 'function') {\n                block = second;\n            }\n        } else if (typeof first === 'function') {\n            block = first;\n        } else {\n            throw new Error('Wrong arguments passed: missing ID and/or function');\n        }\n        \n        super(id);\n        this.blocks = [block];\n    }\n\n    /**\n     * @override\n     *\n     * @ignore\n     */\n    run() {\n        const promises = [];\n        this.blocks.forEach(block => {\n            promises.push(block(this));\n        });\n        return Promise.all(promises);\n    }\n\n    /**\n     * Append another function to run simultaneously as the same task\n     * @param {function} block - function to add \n     */\n    addBlock(block) {\n        if (typeof block === 'function') {\n            this.blocks.push(block);\n        }\n    }\n}\n\nmodule.exports = {\n    BlockOperation\n};","const { Operation } = require('./Operation');\nconst { OperationQueue } = require('./OperationQueue');\n\n/**\n * @class GroupOperation\n */\nclass GroupOperation extends Operation {\n\n    constructor() {\n        super();\n        this.queue = new OperationQueue();    \n        this.operations = [];\n    }\n\n    /**\n     * @override\n     * \n     * @returns {Promise}\n     */\n    async run() {\n        await this.queue.addOperations(this.operations);\n\n        return this.operations.reduce((accum, operation) => {\n            accum.push(operation.result);\n            return accum;\n        }, []);           \n    }\n\n    /**\n     * @override\n     */\n    async start() {\n        this.dependencies = [];\n        return super.start();\n    }\n\n    /**\n     * @param {Operation} operation \n     */\n    addOperation(operation) {\n        this.operations.push(operation);\n        this.dependencies = [];\n    }\n\n    /**\n     * @param {Array.<Operation>} operations\n     */\n    addOperations(operations) {\n        this.operations = this.operations.concat(operations);\n        this.dependencies = [];\n    }\n}\n\nmodule.exports = {\n    GroupOperation\n};"],"sourceRoot":""}