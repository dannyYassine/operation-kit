{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Operation.js","webpack:///./src/OperationEvent.js","webpack:///./src/QueuePriority.js","webpack:///./src/OperationQueue.js","webpack:///./src/index.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/uuid/v4.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./src/utils.js","webpack:///./src/CircularOperationCheck.js","webpack:///./src/BlockOperation.js","webpack:///./src/GroupOperation.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EventEmitter","uuidv4","OperationEvent","QueuePriority","copyArray","Operation","[object Object]","id","this","ee","_dependencies","completionCallback","map","isExecuting","_done","_isInQueue","_canStart","_cancelled","error","promise","runPromise","_queuePriority","normal","_resolve","_reject","emit","DONE","console","log","result","isFinished","Promise","resolve","CANCEL","isCancelled","isInQueue","queuePriority","isValid","dependencies","event","cb","on","off","dependency","push","filter","operation","Error","START","run","then","done","catch","e","ERROR","err","_preProcessStart","READY","main","reject","_createMap","length","forEach","_onDependantOperationDone","start","_tryStart","_isEmpty","obj","veryLow","low","high","veryHigh","CircularOperationChecker","OperationQueue","time","operations","maximumConcurentOperations","readyQueueMap","readyQueue","runningQueueMap","runningQueue","queues","_isDone","totalTime","Math","abs","getTime","end","Date","addOperations","concat","_preProcessOperations","_begin","_paused","_checkNextOperation","isPaused","op","_onOperationStart","_onOperationReady","_onOperationCancel","_onOperationDone","_startOperations","_startOperation","_hasOperations","_getNextOperation","pop","BlockOperation","GroupOperation","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","Number","isNaN","init","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","type","listener","prepend","events","existing","warning","TypeError","newListener","unshift","warned","w","String","emitter","count","warn","_onceWrap","state","fired","wrapFn","wrapped","arguments","removeListener","_listeners","unwrap","evlistener","arr","ret","Array","unwrapListeners","arrayClone","listenerCount","copy","set","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","message","context","handler","len","listeners","addListener","prependListener","once","prependOnceListener","list","position","originalListener","shift","index","spliceOne","removeAllListeners","keys","rawListeners","eventNames","rng","bytesToUuid","options","buf","offset","rnds","random","ii","getRandomValues","crypto","window","msCrypto","rnds8","Uint8Array","byteToHex","toString","substr","bth","join","array","assign","copyObject","CircularOperationError","super","_checkCircular","_verifyOpMap","_checkDependencies","mapHash","JSON","parse","stringify","_throwError","values","block","first","second","queue","reduce","accum"],"mappings":"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","file":"operationkit.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","const EventEmitter = require('events')\nconst uuidv4 = require('uuid/v4');\n\nconst { OperationEvent } = require('./OperationEvent');\nconst { QueuePriority } = require('./QueuePriority');\nconst { copyArray } = require('./utils');\n\nclass Operation {\n\n    constructor(id) {\n        if (!id) {\n            id = uuidv4()\n        }\n\n        this.id = id;\n        this.ee = new EventEmitter();\n        this._dependencies = [];\n        this.completionCallback = null;\n        this.map = {};\n        this.isExecuting = false;\n        this._done = false;\n        this._isInQueue = false;\n        this._canStart = false;\n        this._cancelled = false;\n        this.error = true;\n        this.name = null;\n        this.promise = null;\n        this.runPromise = null;\n        this._queuePriority = QueuePriority.normal;\n\n        this._resolve = null;\n        this._reject = null;\n    }\n\n    done() {\n        this._done = true;\n        this.completionCallback && this.completionCallback(this);\n        this.ee.emit(OperationEvent.DONE, this);\n        console.log(`done: ${this.id}`);\n        this._resolve && this._resolve(this.result);\n    }\n\n    isDone() {\n        return this._done;\n    }\n\n    get isFinished() {\n        return this._done;\n    }\n    \n    cancel() {\n        this._cancelled = true;\n        Promise.resolve(this.promise);\n        this.ee.emit(OperationEvent.CANCEL, this);\n        this._resolve && this._resolve();\n    }\n\n    get isCancelled() {\n        return this._cancelled;\n    }\n\n    set isInQueue(value) {\n        this._isInQueue = value;\n    }\n\n    get isInQueue() {\n        return this._isInQueue;\n    }\n\n    set queuePriority(value) {\n        if (this.isExecuting || this.isCancelled || this.isFinished) {\n            return;\n        }\n\n        if (QueuePriority.isValid(value)) {\n            this._queuePriority = value;\n        }\n    }\n\n    get queuePriority() {\n        return this._queuePriority;\n    }\n\n    set dependencies(value) {\n        if (this.isExecuting || this.isCancelled || this.isFinished) {\n            return;\n        }\n\n        this._dependencies = value;\n    }\n\n    get dependencies() {\n        if (this.isExecuting || this.isCancelled || this.isFinished) {\n            return copyArray(this._dependencies);\n        }\n        return this._dependencies;\n    }\n\n    on(event, cb) {\n        this.ee.on(event, cb);\n    }\n\n    off(event, cb) {\n        this.ee.off(event, cb);\n    }\n\n    addDependency(dependency) {\n        this._dependencies.push(dependency);\n    }\n\n    removeDependency(dependency) {\n        this._dependencies = this._dependencies.filter(operation => operation.id !== dependency.id)\n    }\n\n    /**\n     * @abstract\n     * Needs to be implemented by sub-class\n     * Task to be executed\n     */\n    async run() {\n        throw new Error('run function must be implemented');\n    }\n\n    main() {\n        this.isExecuting = true;\n        this.ee.emit(OperationEvent.START, this);\n        this.runPromise = this.run()\n            .then(result => {\n                this.result = result;\n                this.done();\n            })\n            .catch(e => {\n                this.isExecuting = false;\n                this.error = true;\n                this.ee.emit(OperationEvent.ERROR, {err: e, operation: this});\n                this.ee.emit(OperationEvent.DONE, this);\n                this._reject && this._reject();\n            });\n    }\n\n    start() {\n        if (this.isExecuting || this.isCancelled || this.isFinished) {\n            return this.promise;\n        } else if (this.promise && !this._canStart) {\n            this._preProcessStart();\n        } else if (this.promise && this._canStart) {\n            if (this._isInQueue) {\n                this.ee.emit(OperationEvent.READY, this);\n            } else {\n                this.main();\n            }\n        } else {\n            this.promise = new Promise((resolve, reject) => {\n                this._resolve = resolve;\n                this._reject = reject;\n                this._preProcessStart();\n            });\n        }\n        return this.promise;\n    }\n\n    _preProcessStart() {\n        this._createMap();\n\n        if (this._canStart) {\n            if (this._isInQueue) {\n                this.ee.emit(OperationEvent.READY, this);\n            } else {\n                this.main();\n            }\n        }\n    }\n\n    _createMap() {\n        if (!this._dependencies.length) {\n            this._canStart = true;\n            return;\n        }\n\n        this._dependencies.forEach(operation => {\n            this.map[operation.id] = true;\n            operation.on(OperationEvent.DONE, this._onDependantOperationDone.bind(this));\n            operation.start();\n        });\n\n    }\n\n    _onDependantOperationDone(operation) {\n        delete this.map[operation.id];\n        this._tryStart();\n    }\n\n    _tryStart() {\n        if (this.isExecuting || this.isCancelled || this.isFinished) {\n            return;\n        }\n        if (this._isEmpty(this.map)) {\n            // should emit event to let operation queue that this operation can start\n            // then it could check if maximum concurrent is not passed\n            this._canStart = true;\n            if (this.isInQueue) {\n                this.ee.emit(OperationEvent.READY, this);\n            } else {\n                this.start();\n            }\n        }\n    }\n\n    _isEmpty(obj) {\n        for(var key in obj) {\n            if(obj.hasOwnProperty(key))\n                return false;\n        }\n        return true;\n    }\n}\n\nmodule.exports = {\n    Operation\n}","\nconst OperationEvent = {\n    START: 'start',\n    READY: 'ready',\n    DONE: 'done',\n    CANCEL: 'cancel',\n    ERROR: 'e'\n}\n\nmodule.exports = {\n    OperationEvent\n}","const QueuePriority = {\n    veryLow: 0,\n    low: 1,\n    normal: 2,\n    high: 3,\n    veryHigh: 4,\n    isValid(value) {\n        return value >= QueuePriority.veryLow && value <= QueuePriority.veryHigh;\n    }\n}\n\nmodule.exports = {\n    QueuePriority\n}","const { CircularOperationChecker } = require('./CircularOperationCheck');\nconst { QueuePriority } = require('./QueuePriority');\n\nclass OperationQueue {\n\n    constructor() {\n        this.time = {};\n        this.map = {};\n        this.operations = [];\n        this.resolve = null;\n        this.completionCallback = null;\n        this.maximumConcurentOperations = 10;\n\n        this.readyQueueMap = {};\n        this.readyQueue = [];\n\n        this.runningQueueMap = {};\n        this.runningQueue = [];\n\n        this.queues = {\n            [QueuePriority.veryHigh]: [],\n            [QueuePriority.high]: [],\n            [QueuePriority.normal]: [],\n            [QueuePriority.low]: [],\n            [QueuePriority.veryLow]: []\n        }\n\n        this._isDone = false;\n    }\n\n    get totalTime() {\n        return Math.abs((this.time.start.getTime() - this.time.end.getTime()) / 1000);\n    }\n\n    get isExecuting() {\n        return !this._isEmpty(this.map);\n    }\n\n    done() {\n        if (this._isDone) {\n            return;\n        }\n        \n        this.time.end = new Date();\n        this._isDone = true;\n        this.completionCallback && this.completionCallback();\n        this.resolve();\n    }\n\n    /**\n     * \n     * @param {Operation} operation \n     */\n    async addOperation(operation) {\n        return this.addOperations([operation]);\n    }\n\n    /**\n     * \n     * @param {Array.<Operation>} operations\n     */\n    async addOperations(operations) {\n        this.operations = this.operations.concat(operations);\n        this._preProcessOperations(this.operations);\n        return this._begin();\n    }\n\n    pause() {\n        this._paused = true;\n    }\n\n    resume() {\n        this._paused = false;\n        this._checkNextOperation();\n    }\n\n    get isPaused() {\n        return this._paused;\n    }\n\n    _preProcessOperations(operations) {\n        operations.forEach(op => {\n            if (!this.map[op.id]) {\n                this.map[op.id] = true;\n                op.isInQueue = true;\n                op.on('start', this._onOperationStart.bind(this));\n                op.on('ready', this._onOperationReady.bind(this));\n                op.on('cancel', this._onOperationCancel.bind(this));\n                op.on('done', this._onOperationDone.bind(this));\n            };\n            this._preProcessOperations(op.dependencies);\n        })\n    }\n\n    _begin() {\n        if (this.promise) {\n            this._startOperations();\n        } else {\n            this.promise = new Promise((resolve, reject) => {\n                try {\n                    new CircularOperationChecker(this.operations);\n                } catch (e) {\n                    return reject(e);\n                }\n                this.time.start = new Date();\n                this.resolve = resolve;\n                \n                this._startOperations();\n            });\n        }\n\n        return this.promise;\n    }\n\n    _startOperations() {\n        this.operations.forEach(operation => {\n            this._startOperation(operation);\n        });\n    }\n\n    _startOperation(operation) {\n        operation.start();\n    }\n\n    _onOperationStart(operation) {\n        //\n    }\n\n    _onOperationReady(operation) {\n        if (this.readyQueueMap[operation.id]) {\n            return;\n        }\n        this.readyQueueMap[operation.id] = true;\n        this.queues[operation.queuePriority].push(operation);\n\n        this._checkNextOperation() \n    }\n\n    _onOperationDone(operation) {\n        this.runningQueue = this.runningQueue.filter(op => op.id !== operation.id);\n\n        delete this.map[operation.id];\n        delete this.runningQueueMap[operation.id];\n\n        if (this._isEmpty(this.map)) {\n            this.done();\n        } else {\n            this._checkNextOperation();\n        }\n    }\n\n    _checkNextOperation() {\n        if (this._paused) {\n            return;\n        }\n\n        if (this.runningQueue.length < this.maximumConcurentOperations && this._hasOperations()) {\n            const operation = this._getNextOperation();\n            if (!operation.isExecuting || !operation.isCancelled || !this.runningQueueMap[operation.id]) {\n                this.runningQueueMap[operation.id] = true;\n                this.runningQueue.push(operation);\n                operation.main();\n                this._checkNextOperation()\n            }\n        }\n    }\n\n    _hasOperations() {\n        return !!(this.queues[QueuePriority.veryHigh].length\n        + this.queues[QueuePriority.high].length\n        + this.queues[QueuePriority.normal].length\n        + this.queues[QueuePriority.low].length\n        + this.queues[QueuePriority.veryLow].length);\n    }\n\n    _getNextOperation() {\n        if (this.queues[QueuePriority.veryHigh].length) {\n            return this.queues[QueuePriority.veryHigh].pop();\n        } else if (this.queues[QueuePriority.high].length) {\n            return this.queues[QueuePriority.high].pop();\n        } else if (this.queues[QueuePriority.normal].length) {\n            return this.queues[QueuePriority.normal].pop();\n        } else if (this.queues[QueuePriority.low].length) {\n            return this.queues[QueuePriority.low].pop();\n        } else if (this.queues[QueuePriority.veryLow].length) {\n            return this.queues[QueuePriority.veryLow].pop();\n        }\n    }\n\n\n    _onOperationCancel(operation) {\n        delete this.map[operation.id];\n        if (this._isEmpty(this.map)) {\n            this.done();\n        }\n    }\n\n    _isEmpty(obj) {\n        for(var key in obj) {\n            if(obj.hasOwnProperty(key))\n                return false;\n        }\n        return true;\n    }\n}\n\nmodule.exports = {\n    OperationQueue\n}","\nconst { Operation } = require('./Operation');\nconst { OperationQueue } = require('./OperationQueue');\nconst { BlockOperation } = require('./BlockOperation');\nconst { GroupOperation } = require('./GroupOperation');\nconst { OperationEvent } = require('./OperationEvent');\n\nmodule.exports = {\n    Operation,\n    OperationQueue,\n    BlockOperation,\n    GroupOperation,\n    OperationEvent\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","const copyArray = array => {\n    return array.map(object => Object.assign(Object.create(object), object))\n}\n\nconst copyObject = object => {\n    return Object.assign(Object.create(object), object);\n}\n\nmodule.exports = {\n    copyArray,\n    copyObject,\n}","\nclass CircularOperationError extends Error {\n    constructor(message = 'Circular dependency') {\n        super()\n        this.message = message;\n    }\n}\n\nclass CircularOperationChecker {\n\n    constructor(operations) {\n        this.operations = operations\n        this._checkCircular();\n    }\n\n    _checkCircular() {\n        this.operations.forEach(operation => {\n            operation.dependencies.forEach(op => {\n                let map = {};\n                map[operation.id] = Object.keys(map).length;\n                this._verifyOpMap(op, map);                \n                this._checkDependencies(op, map)\n            });\n        });\n    }\n\n    _checkDependencies(operation, mapHash) {\n        operation.dependencies.forEach(op => {\n            let map = JSON.parse(JSON.stringify(mapHash));\n            this._verifyOpMap(op, map);\n            this._checkDependencies(op, map)\n        })\n    }\n\n    _verifyOpMap(op, map) {\n        if (map[op.id] !== undefined) {\n            this._throwError(op, map)\n        }\n\n        map[op.id] = Object.keys(map).length;\n    }\n\n    _throwError() {\n        let keys = Object.keys(map);\n\n            let values = {};\n            for (let key in map) {\n                const value = map[key];\n                values[value] = key;\n            }\n\n            values = Object.values(values);\n            values.push(op.id);\n            throw new CircularOperationError(`Circular: ${values}`);\n    }\n\n}\n\nmodule.exports = {\n    CircularOperationChecker\n}","const { Operation } = require('./Operation');\n\nclass BlockOperation extends Operation {\n\n    constructor() {\n        let id;\n        let block;\n\n        const first = arguments[0];\n        if (typeof first === 'number') {\n            id = first;\n            const second = arguments[1];\n            if (typeof second === 'function') {\n                block = second;\n            }\n        } else if (typeof first === 'function') {\n            block = first;\n        }\n        \n        super(id);\n        this.block = block;\n    }\n\n    run() {\n        return this.block();\n    }\n}\n\nmodule.exports = {\n    BlockOperation\n}","const { Operation } = require('./Operation');\nconst { OperationQueue } = require('./OperationQueue');\n\nclass GroupOperation extends Operation {\n\n    constructor() {\n        super();\n        this.queue = new OperationQueue();    \n        this.operations = [];\n    }\n\n    /**\n     * @override\n     * \n     * @returns {Promise}\n     */\n    async run() {\n        await this.queue.addOperations(this.operations)\n\n        return this.operations.reduce((accum, operation) => {\n            accum.push(operation.result);\n            return accum;\n        }, []);           \n    }\n\n    /**\n     * @override\n     */\n    async start() {\n        this.dependencies = [];\n        return super.start();\n    }\n\n    /**\n     * @param {Operation} operation \n     */\n    addOperation(operation) {\n        this.operations.push(operation);\n        this.dependencies = [];\n    }\n\n    /**\n     * @param {Array.<Operation>} operation \n     */\n    addOperations(operations) {\n        this.operations = this.operations.concat(operations);\n        this.dependencies = [];\n    }\n}\n\nmodule.exports = {\n    GroupOperation\n}"],"sourceRoot":""}